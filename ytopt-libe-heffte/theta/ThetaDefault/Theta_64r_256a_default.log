+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256
+ speed3d_r2c fftw float 256 256 256

----------------------------------------------------------------------------- 
heFFTe performance test
----------------------------------------------------------------------------- 
Backend:   fftw
Size:      256x256x256
MPI ranks:   64
Grids: (4, 4, 4)  (1, 8, 8)  (8, 1, 8)  (8, 8, 1)  (4, 4, 4)  
Time per run: 0.0202797 (s)
Performance:  99.275 GFlops/s
Memory usage: 8MB/rank
Tolerance:    0.0005
Max error:    1.37091e-06

Application 28483622 resources: utime ~24s, stime ~23s, Rss ~35772, inblocks ~105450, outblocks ~24
